#include <iostream>
#include <functional> // unary_function,
#include <algorithm> // remove_if
#include <vector> // vector
using namespace std;


class Widget
{};

/*
below class is not a pure predicate which may lead some problem 
*/

class BadPredicate: public unary_function<Widget, bool> {
    public:
        BadPredicate(): timeCalled(0) {}
        bool operator()(const Widget&){
            return ++timeCalled == 3;
        }
    private:
        size_t timeCalled;
};
int main()
{
    vector<Widget> vw;
    vw.erase(remove_if(vw.begin(), vw.end(), BadPredicate()), vw.end());
    cout<<"end";

    return 0;
}
